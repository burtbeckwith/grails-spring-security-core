@org.codehaus.groovy.grails.plugins.springsecurity.SpringSecurityUtils@ is a utility class with static methods that can be called directly without using dependency injection. It's primarily an internal class but can be called from application code.

h4. authoritiesToRoles()

Extracts role names from an array or @Collection@ of [GrantedAuthority|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/GrantedAuthority.html].

h4. getPrincipalAuthorities()

Retrieves the currently logged-in user's authorities. Will be empty (but never @null@) if not logged in.

h4. parseAuthoritiesString()

Splits a comma-delimited String containing role names into a @List@ of [GrantedAuthority|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/GrantedAuthority.html]

h4. ifAllGranted()

Checks if the current user has all of the specified roles (a comma-delimited String of role names). This is primarily used by @SecurityTagLib.ifAllGranted@

h4. ifNotGranted()

Checks if the current user has none of the specified roles (a comma-delimited String of role names). This is primarily used by @SecurityTagLib.ifNotGranted@

h4. ifAnyGranted()

Checks if the current user has any of the specified roles (a comma-delimited String of role names). This is primarily used by @SecurityTagLib.ifAnyGranted@

h4. getSecurityConfig()

Retrieves the security part of the @Configuration@ (from @grails-app/conf/Config.groovy@).

h4. loadSecondaryConfig()

Used by dependent plugins to add configuration attributes.

h4. reloadSecurityConfig()

Forces a reload of the security configuration.

h4. isAjax()

Checks if the request was triggered by an Ajax call. The standard way to determine this is to see if @X-Requested-With@ request header is set and has the value @XMLHttpRequest@. The plugin relaxes this a bit and only checks if the header is set to any value. In addition, you can configure the name of the header using the @grails.plugins.springsecurity.ajaxHeader@ configuration attribute, but this shouldn't be done in general since all of the major JavaScript toolkits use the standard name.

In addition, you can force the request to be treated as Ajax by appending @&ajax=true@ to your request query string.

h4. registerProvider()

Used by dependent plugins to register an [AuthenticationProvider|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/authentication/AuthenticationProvider.html] bean name.

h4. registerFilter()

Used by dependent plugins to register a filter bean name in a specified position in the filter chain.

h4. isSwitched()

Checks if the current user switched from another user.

h4. getSwitchedUserOriginalUsername()

Gets the original user's username if the current user switched from another user.

