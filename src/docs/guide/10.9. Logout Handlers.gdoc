Spring Security allows you to register a list of logout handlers (implementing the [LogoutHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/logout/LogoutHandler.html] interface) that will be called when a user explicitly logs out.

By default, a @securityContextLogoutHandler@ bean is registered to clear the [SecurityContextHolder|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/context/SecurityContextHolder.html]. Also, if you're not using Facebook or OpenID, @rememberMeServices@ bean is registered to reset your cookie (Facebook and OpenID authenticate externally so we don't have access to the password to create a remember-me cookie). If you're using Facebook, a @facebookLogoutHandler@ is registered to reset its session cookies.

To customize this list, you define a @logout.handlerNames@ attribute with a list of bean names. The beans must be declared either by the plugin or by you in @resources.groovy@ or @resources.xml@. So if you have a custom @MyLogoutHandler@ in @resources.groovy@, e.g.

{code}
beans = {
   myLogoutHandler(com.foo.MyLogoutHandler) {
      // attributes
   }
}
{code}
then you'd register it in @grails-app/conf/Config.groovy@ as:

{code}
grails.plugins.springsecurity.logout.handlerNames = [
   'rememberMeServices', 'securityContextLogoutHandler', 'myLogoutHandler'
]
{code}


